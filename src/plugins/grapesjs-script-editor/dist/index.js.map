{"version":3,"file":"index.js","mappings":"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","sources":["webpack://grapesjs-script-editor/webpack/universalModuleDefinition","webpack://grapesjs-script-editor/webpack/bootstrap","webpack://grapesjs-script-editor/webpack/runtime/define property getters","webpack://grapesjs-script-editor/webpack/runtime/hasOwnProperty shorthand","webpack://grapesjs-script-editor/webpack/runtime/make namespace object","webpack://grapesjs-script-editor/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://grapesjs-script-editor/./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack://grapesjs-script-editor/./node_modules/@babel/runtime/helpers/esm/toPrimitive.js","webpack://grapesjs-script-editor/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://grapesjs-script-editor/./src/consts.js","webpack://grapesjs-script-editor/./src/commands.js","webpack://grapesjs-script-editor/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-script-editor\"] = factory();\n\telse\n\t\troot[\"grapesjs-script-editor\"] = factory();\n})(typeof globalThis !== 'undefined' ? globalThis : (typeof window !== 'undefined' ? window : this), () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export const cmdId = 'edit-script';","import {\n    cmdId\n} from './consts';\n\nexport default (editor, opts = {}) => {\n    const cm = editor.Commands;\n    const md = editor.Modal;\n    const domc = editor.Components;\n    const {\n        modalTitle,\n        codeViewOptions,\n        commandAttachScript,\n        toolbarIcon,\n        onRun,\n        onError,\n        starter\n    } = opts;\n    let scriptTypesSupport = opts.scriptTypesSupport;\n\n    let content = null;\n\n    const appendToContent = (target, content) => {\n        if (content instanceof HTMLElement) {\n            target.appendChild(content);\n        } else if (content) {\n            target.insertAdjacentHTML('beforeend', content);\n        }\n    };\n\n    if (editor.$.isString(scriptTypesSupport)) {\n        scriptTypesSupport = scriptTypesSupport.split(',');\n    }\n\n    if (editor.$.isArray(scriptTypesSupport)) {\n        scriptTypesSupport = scriptTypesSupport.includes('*') ?\n            domc.getTypes().map(c => c.id) : scriptTypesSupport;\n    }\n\n    // Add icons to specified component types\n    scriptTypesSupport && scriptTypesSupport.forEach(type => {\n        const typeOpt = domc.getType(type).model;\n        domc.addType(type, {\n            model: {\n                initToolbar() {\n                    typeOpt.prototype.initToolbar.apply(this, arguments);\n                    const tb = this.get('toolbar');\n                    const tbExists = tb.some(item => item.command === cmdId);\n\n                    if (!tbExists) {\n                        tb.unshift({\n                            command: cmdId,\n                            label: toolbarIcon,\n                            ...opts.toolbarBtnCustomScript\n                        });\n                        this.set('toolbar', tb);\n                    }\n                }\n            }\n        });\n    })\n\n    // Add the script command\n    cm.add(cmdId, {\n        run(editor, sender, opts = {}) {\n            this.editor = editor;\n            this.options = opts;\n            this.target = opts.target || editor.getSelected();\n            const target = this.target;\n\n            if (target) this.showCustomCode(target);\n        },\n\n        stop(editor) {\n            md.close();\n        },\n\n        /**\n         * Method which tells how to show the custom code\n         * @param  {Component} target\n         */\n        showCustomCode(target) {\n            const { editor, options } = this;\n            const title = options.title || modalTitle;\n            if (!content) content = this.getContent();\n            let code = target.getScriptString() || starter;\n            md.open({\n                title,\n                content\n            }).getModel().once('change:open', () => editor.stopCommand(this.id));\n            this.getCodeViewer().setContent(code);\n        },\n\n        /**\n         * Custom pre-content. Can be a simple string or an HTMLElement\n         */\n        getPreContent() {},\n\n        /**\n         * Custom post-content. Can be a simple string or an HTMLElement\n         */\n        getPostContent() {},\n\n        /**\n         * Get all the content for the custom code\n         * @return {HTMLElement}\n         */\n        getContent() {\n            const { editor } = this;\n            const content = document.createElement('div');\n            const pfx = editor.getConfig('stylePrefix');\n            content.className = `${pfx}attach-script`;\n            appendToContent(content, this.getPreContent());\n            const codeViewer = this.getCodeViewer();\n            codeViewer.refresh();\n            setTimeout(() => codeViewer.focus(), 0);\n            content.appendChild(codeViewer.getElement());\n            appendToContent(content, this.getPostContent());\n            appendToContent(content, this.getContentActions());\n\n            return content;\n        },\n\n        /**\n         * Get the actions content. Can be a simple string or an HTMLElement\n         * @return {HTMLElement|String}\n         */\n        getContentActions() {\n            const { editor } = this;\n            const actions = document.createElement('div');\n            actions.id = \"actns\";\n            const btn = document.createElement('button');\n            const pfx = editor.getConfig('stylePrefix');\n            btn.innerHTML = opts.buttonLabel;\n            btn.className = `${pfx}btn-prim ${pfx}btn-save__inject-logic`;\n            btn.onclick = () => this.handleSave();\n\n            const runLogic = document.createElement('div');\n            runLogic.id = \"logic-toolbar\";\n            runLogic.className = \"fa fa-bug\";\n            runLogic.style = \"margin:5px;padding:10px;background:rgba(0,0,0,0.2);border-radius:3px;border:1px solid rgba(0,0,0,0.2);cursor:pointer\";\n            runLogic.onclick = () => this.runCode();\n\n            actions.appendChild(runLogic);\n            actions.appendChild(btn);\n\n            return actions;\n        },\n\n        /**\n         * Handle the main save task\n         */\n        handleSave() {\n            const { editor, target } = this;\n            const code = this.getCodeViewer().getContent();\n            target.set('script', code);\n            editor.Modal.close();\n        },\n\n        /**\n         * Return the code viewer instance\n         * @return {CodeViewer}\n         */\n        getCodeViewer() {\n            const { editor } = this;\n\n            if (!this.codeViewer) {\n                this.codeViewer = editor.CodeManager.createViewer({\n                    codeName: 'javascript',\n                    theme: 'hopscotch',\n                    readOnly: 0,\n                    autoBeautify: 1,\n                    ...codeViewOptions,\n                });\n            }\n\n            return this.codeViewer;\n        },\n\n        /**\n         * Evaluate code syntax\n         */\n        runCode() {\n            //console.log(\"run\")\n            try {\n                const code = this.getCodeViewer().getContent();\n                Function('\"use strict\";' + code)(); // final code\n                onRun && onRun();\n            } catch (err) {\n                console.log(\"error\", err);\n                onError && onError(err);\n            }\n        },\n\n        ...commandAttachScript,\n    });\n}","import commands from './commands';\n\nexport default (editor, opts = {}) => {\n    const options = {\n        ...{\n            // Starter code\n            starter: 'let el = this',\n\n            toolbarIcon: '<i class=\"fa fa-file-code-o\"></i>',\n\n            // Component types to allow script editing\n            // Avoid components with predefined scripts\n            scriptTypesSupport: ['default', 'wrapper', 'text', 'textnode', 'image', 'video', 'svg'],\n\n            // Object to extend the default component's toolbar button for the code, eg. `{ label: '</>', attributes: { title: 'Open custom code' } }`\n            // Pass a falsy value to avoid adding the button\n            toolbarBtnCustomScript: {},\n\n            // On run success\n            onRun: () => console.log('valid syntax'),\n\n            // Logic when there is an error on run\n            onError: err => console.log('error', err),\n\n            // Title for the custom code modal\n            modalTitle: 'Script',\n\n            // Textarea label\n            codeLabel: 'JS',\n\n            // Additional options for the code viewer, eg. `{ theme: 'hopscotch', readOnly: 0 }`\n            codeViewOptions: {},\n\n            // Label for the default save button\n            buttonLabel: 'Save',\n\n            // Object to extend the default inject logic command.\n            // Check the source to see all available methods\n            commandAttachScript: {},\n        },\n        ...opts\n    };\n\n    // load commands\n    commands(editor, options);\n};"],"names":["root","factory","exports","module","define","amd","globalThis","window","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","_typeof","iterator","constructor","_toPropertyKey","arg","input","hint","prim","toPrimitive","undefined","res","TypeError","String","Number","_defineProperty","toPropertyKey","configurable","writable","cmdId","editor","opts","cm","Commands","md","Modal","domc","Components","modalTitle","codeViewOptions","commandAttachScript","toolbarIcon","onRun","onError","starter","scriptTypesSupport","content","appendToContent","target","HTMLElement","appendChild","insertAdjacentHTML","$","isString","split","isArray","includes","getTypes","map","c","id","forEach","type","typeOpt","getType","model","addType","initToolbar","apply","arguments","tb","tbExists","some","item","command","unshift","label","toolbarBtnCustomScript","set","add","run","sender","options","getSelected","showCustomCode","stop","close","title","getContent","code","getScriptString","open","getModel","once","stopCommand","getCodeViewer","setContent","getPreContent","getPostContent","document","createElement","pfx","getConfig","className","codeViewer","refresh","setTimeout","focus","getElement","getContentActions","actions","btn","innerHTML","buttonLabel","onclick","handleSave","runLogic","style","runCode","CodeManager","createViewer","codeName","theme","readOnly","autoBeautify","Function","err","console","log","codeLabel","commands"],"sourceRoot":""}